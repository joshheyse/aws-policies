
export enum auditmanager {
 All = 'auditmanager:*',
 Batch = 'auditmanager:Batch*',
 Create = 'auditmanager:Create*',
 Delete = 'auditmanager:Delete*',
 Deregister = 'auditmanager:Deregister*',
 Get = 'auditmanager:Get*',
 List = 'auditmanager:List*',
 Register = 'auditmanager:Register*',
 Update = 'auditmanager:Update*',
 AssociateAssessmentReportEvidenceFolder = 'auditmanager:AssociateAssessmentReportEvidenceFolder',
 BatchAssociateAssessmentReportEvidence = 'auditmanager:BatchAssociateAssessmentReportEvidence',
 BatchCreateDelegationByAssessment = 'auditmanager:BatchCreateDelegationByAssessment',
 BatchDeleteDelegationByAssessment = 'auditmanager:BatchDeleteDelegationByAssessment',
 BatchDisassociateAssessmentReportEvidence = 'auditmanager:BatchDisassociateAssessmentReportEvidence',
 BatchImportEvidenceToAssessmentControl = 'auditmanager:BatchImportEvidenceToAssessmentControl',
 CreateAssessment = 'auditmanager:CreateAssessment',
 CreateAssessmentFramework = 'auditmanager:CreateAssessmentFramework',
 CreateAssessmentReport = 'auditmanager:CreateAssessmentReport',
 CreateControl = 'auditmanager:CreateControl',
 DeleteAssessment = 'auditmanager:DeleteAssessment',
 DeleteAssessmentFramework = 'auditmanager:DeleteAssessmentFramework',
 DeleteAssessmentReport = 'auditmanager:DeleteAssessmentReport',
 DeleteControl = 'auditmanager:DeleteControl',
 DeregisterAccount = 'auditmanager:DeregisterAccount',
 DeregisterOrganizationAdminAccount = 'auditmanager:DeregisterOrganizationAdminAccount',
 DisassociateAssessmentReportEvidenceFolder = 'auditmanager:DisassociateAssessmentReportEvidenceFolder',
 GetAccountStatus = 'auditmanager:GetAccountStatus',
 GetAssessment = 'auditmanager:GetAssessment',
 GetAssessmentFramework = 'auditmanager:GetAssessmentFramework',
 GetAssessmentReportUrl = 'auditmanager:GetAssessmentReportUrl',
 GetChangeLogs = 'auditmanager:GetChangeLogs',
 GetControl = 'auditmanager:GetControl',
 GetDelegations = 'auditmanager:GetDelegations',
 GetEvidence = 'auditmanager:GetEvidence',
 GetEvidenceByEvidenceFolder = 'auditmanager:GetEvidenceByEvidenceFolder',
 GetEvidenceFolder = 'auditmanager:GetEvidenceFolder',
 GetEvidenceFoldersByAssessment = 'auditmanager:GetEvidenceFoldersByAssessment',
 GetEvidenceFoldersByAssessmentControl = 'auditmanager:GetEvidenceFoldersByAssessmentControl',
 GetOrganizationAdminAccount = 'auditmanager:GetOrganizationAdminAccount',
 GetServicesInScope = 'auditmanager:GetServicesInScope',
 GetSettings = 'auditmanager:GetSettings',
 ListAssessmentFrameworks = 'auditmanager:ListAssessmentFrameworks',
 ListAssessmentReports = 'auditmanager:ListAssessmentReports',
 ListAssessments = 'auditmanager:ListAssessments',
 ListControls = 'auditmanager:ListControls',
 ListKeywordsForDataSource = 'auditmanager:ListKeywordsForDataSource',
 ListNotifications = 'auditmanager:ListNotifications',
 ListTagsForResource = 'auditmanager:ListTagsForResource',
 RegisterAccount = 'auditmanager:RegisterAccount',
 RegisterOrganizationAdminAccount = 'auditmanager:RegisterOrganizationAdminAccount',
 TagResource = 'auditmanager:TagResource',
 UntagResource = 'auditmanager:UntagResource',
 UpdateAssessment = 'auditmanager:UpdateAssessment',
 UpdateAssessmentControl = 'auditmanager:UpdateAssessmentControl',
 UpdateAssessmentControlSetStatus = 'auditmanager:UpdateAssessmentControlSetStatus',
 UpdateAssessmentFramework = 'auditmanager:UpdateAssessmentFramework',
 UpdateAssessmentStatus = 'auditmanager:UpdateAssessmentStatus',
 UpdateControl = 'auditmanager:UpdateControl',
 UpdateSettings = 'auditmanager:UpdateSettings',
 ValidateAssessmentReportIntegrity = 'auditmanager:ValidateAssessmentReportIntegrity',

}