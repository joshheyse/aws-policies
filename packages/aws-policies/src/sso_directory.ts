
export enum sso_directory {
 All = 'sso-directory:*',
 Complete = 'sso-directory:Complete*',
 Create = 'sso-directory:Create*',
 Delete = 'sso-directory:Delete*',
 Describe = 'sso-directory:Describe*',
 Disable = 'sso-directory:Disable*',
 Enable = 'sso-directory:Enable*',
 Get = 'sso-directory:Get*',
 List = 'sso-directory:List*',
 Search = 'sso-directory:Search*',
 Start = 'sso-directory:Start*',
 Update = 'sso-directory:Update*',
 AddMemberToGroup = 'sso-directory:AddMemberToGroup',
 CompleteVirtualMfaDeviceRegistration = 'sso-directory:CompleteVirtualMfaDeviceRegistration',
 CompleteWebAuthnDeviceRegistration = 'sso-directory:CompleteWebAuthnDeviceRegistration',
 CreateAlias = 'sso-directory:CreateAlias',
 CreateBearerToken = 'sso-directory:CreateBearerToken',
 CreateExternalIdPConfigurationForDirectory = 'sso-directory:CreateExternalIdPConfigurationForDirectory',
 CreateGroup = 'sso-directory:CreateGroup',
 CreateProvisioningTenant = 'sso-directory:CreateProvisioningTenant',
 CreateUser = 'sso-directory:CreateUser',
 DeleteBearerToken = 'sso-directory:DeleteBearerToken',
 DeleteExternalIdPCertificate = 'sso-directory:DeleteExternalIdPCertificate',
 DeleteExternalIdPConfigurationForDirectory = 'sso-directory:DeleteExternalIdPConfigurationForDirectory',
 DeleteGroup = 'sso-directory:DeleteGroup',
 DeleteMfaDeviceForUser = 'sso-directory:DeleteMfaDeviceForUser',
 DeleteProvisioningTenant = 'sso-directory:DeleteProvisioningTenant',
 DeleteUser = 'sso-directory:DeleteUser',
 DescribeDirectory = 'sso-directory:DescribeDirectory',
 DescribeGroup = 'sso-directory:DescribeGroup',
 DescribeGroups = 'sso-directory:DescribeGroups',
 DescribeProvisioningTenant = 'sso-directory:DescribeProvisioningTenant',
 DescribeUser = 'sso-directory:DescribeUser',
 DescribeUserByUniqueAttribute = 'sso-directory:DescribeUserByUniqueAttribute',
 DescribeUsers = 'sso-directory:DescribeUsers',
 DisableExternalIdPConfigurationForDirectory = 'sso-directory:DisableExternalIdPConfigurationForDirectory',
 DisableUser = 'sso-directory:DisableUser',
 EnableExternalIdPConfigurationForDirectory = 'sso-directory:EnableExternalIdPConfigurationForDirectory',
 EnableUser = 'sso-directory:EnableUser',
 GetAWSSPConfigurationForDirectory = 'sso-directory:GetAWSSPConfigurationForDirectory',
 GetUserPoolInfo = 'sso-directory:GetUserPoolInfo',
 ImportExternalIdPCertificate = 'sso-directory:ImportExternalIdPCertificate',
 IsMemberInGroup = 'sso-directory:IsMemberInGroup',
 ListBearerTokens = 'sso-directory:ListBearerTokens',
 ListExternalIdPCertificates = 'sso-directory:ListExternalIdPCertificates',
 ListExternalIdPConfigurationsForDirectory = 'sso-directory:ListExternalIdPConfigurationsForDirectory',
 ListGroupsForMember = 'sso-directory:ListGroupsForMember',
 ListGroupsForUser = 'sso-directory:ListGroupsForUser',
 ListMembersInGroup = 'sso-directory:ListMembersInGroup',
 ListMfaDevicesForUser = 'sso-directory:ListMfaDevicesForUser',
 ListProvisioningTenants = 'sso-directory:ListProvisioningTenants',
 RemoveMemberFromGroup = 'sso-directory:RemoveMemberFromGroup',
 SearchGroups = 'sso-directory:SearchGroups',
 SearchUsers = 'sso-directory:SearchUsers',
 StartVirtualMfaDeviceRegistration = 'sso-directory:StartVirtualMfaDeviceRegistration',
 StartWebAuthnDeviceRegistration = 'sso-directory:StartWebAuthnDeviceRegistration',
 UpdateExternalIdPConfigurationForDirectory = 'sso-directory:UpdateExternalIdPConfigurationForDirectory',
 UpdateGroup = 'sso-directory:UpdateGroup',
 UpdateGroupDisplayName = 'sso-directory:UpdateGroupDisplayName',
 UpdateMfaDeviceForUser = 'sso-directory:UpdateMfaDeviceForUser',
 UpdatePassword = 'sso-directory:UpdatePassword',
 UpdateUser = 'sso-directory:UpdateUser',
 UpdateUserName = 'sso-directory:UpdateUserName',
 VerifyEmail = 'sso-directory:VerifyEmail',

}