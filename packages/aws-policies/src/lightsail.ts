
export enum lightsail {
 AllocateStaticIp = 'lightsail:AllocateStaticIp',
 AttachDisk = 'lightsail:AttachDisk',
 AttachInstancesToLoadBalancer = 'lightsail:AttachInstancesToLoadBalancer',
 AttachLoadBalancerTlsCertificate = 'lightsail:AttachLoadBalancerTlsCertificate',
 AttachStaticIp = 'lightsail:AttachStaticIp',
 CloseInstancePublicPorts = 'lightsail:CloseInstancePublicPorts',
 CopySnapshot = 'lightsail:CopySnapshot',
 CreateCloudFormationStack = 'lightsail:CreateCloudFormationStack',
 CreateDisk = 'lightsail:CreateDisk',
 CreateDiskFromSnapshot = 'lightsail:CreateDiskFromSnapshot',
 CreateDiskSnapshot = 'lightsail:CreateDiskSnapshot',
 CreateDomain = 'lightsail:CreateDomain',
 CreateDomainEntry = 'lightsail:CreateDomainEntry',
 CreateInstanceSnapshot = 'lightsail:CreateInstanceSnapshot',
 CreateInstances = 'lightsail:CreateInstances',
 CreateInstancesFromSnapshot = 'lightsail:CreateInstancesFromSnapshot',
 CreateKeyPair = 'lightsail:CreateKeyPair',
 CreateLoadBalancer = 'lightsail:CreateLoadBalancer',
 CreateLoadBalancerTlsCertificate = 'lightsail:CreateLoadBalancerTlsCertificate',
 CreateRelationalDatabase = 'lightsail:CreateRelationalDatabase',
 CreateRelationalDatabaseFromSnapshot = 'lightsail:CreateRelationalDatabaseFromSnapshot',
 CreateRelationalDatabaseSnapshot = 'lightsail:CreateRelationalDatabaseSnapshot',
 DeleteDisk = 'lightsail:DeleteDisk',
 DeleteDiskSnapshot = 'lightsail:DeleteDiskSnapshot',
 DeleteDomain = 'lightsail:DeleteDomain',
 DeleteDomainEntry = 'lightsail:DeleteDomainEntry',
 DeleteInstance = 'lightsail:DeleteInstance',
 DeleteInstanceSnapshot = 'lightsail:DeleteInstanceSnapshot',
 DeleteKeyPair = 'lightsail:DeleteKeyPair',
 DeleteKnownHostKeys = 'lightsail:DeleteKnownHostKeys',
 DeleteLoadBalancer = 'lightsail:DeleteLoadBalancer',
 DeleteLoadBalancerTlsCertificate = 'lightsail:DeleteLoadBalancerTlsCertificate',
 DeleteRelationalDatabase = 'lightsail:DeleteRelationalDatabase',
 DeleteRelationalDatabaseSnapshot = 'lightsail:DeleteRelationalDatabaseSnapshot',
 DetachDisk = 'lightsail:DetachDisk',
 DetachInstancesFromLoadBalancer = 'lightsail:DetachInstancesFromLoadBalancer',
 DetachStaticIp = 'lightsail:DetachStaticIp',
 DownloadDefaultKeyPair = 'lightsail:DownloadDefaultKeyPair',
 ExportSnapshot = 'lightsail:ExportSnapshot',
 GetActiveNames = 'lightsail:GetActiveNames',
 GetBlueprints = 'lightsail:GetBlueprints',
 GetBundles = 'lightsail:GetBundles',
 GetCloudFormationStackRecords = 'lightsail:GetCloudFormationStackRecords',
 GetDisk = 'lightsail:GetDisk',
 GetDiskSnapshot = 'lightsail:GetDiskSnapshot',
 GetDiskSnapshots = 'lightsail:GetDiskSnapshots',
 GetDisks = 'lightsail:GetDisks',
 GetDomain = 'lightsail:GetDomain',
 GetDomains = 'lightsail:GetDomains',
 GetExportSnapshotRecords = 'lightsail:GetExportSnapshotRecords',
 GetInstance = 'lightsail:GetInstance',
 GetInstanceAccessDetails = 'lightsail:GetInstanceAccessDetails',
 GetInstanceMetricData = 'lightsail:GetInstanceMetricData',
 GetInstancePortStates = 'lightsail:GetInstancePortStates',
 GetInstanceSnapshot = 'lightsail:GetInstanceSnapshot',
 GetInstanceSnapshots = 'lightsail:GetInstanceSnapshots',
 GetInstanceState = 'lightsail:GetInstanceState',
 GetInstances = 'lightsail:GetInstances',
 GetKeyPair = 'lightsail:GetKeyPair',
 GetKeyPairs = 'lightsail:GetKeyPairs',
 GetLoadBalancer = 'lightsail:GetLoadBalancer',
 GetLoadBalancerMetricData = 'lightsail:GetLoadBalancerMetricData',
 GetLoadBalancerTlsCertificates = 'lightsail:GetLoadBalancerTlsCertificates',
 GetLoadBalancers = 'lightsail:GetLoadBalancers',
 GetOperation = 'lightsail:GetOperation',
 GetOperations = 'lightsail:GetOperations',
 GetOperationsForResource = 'lightsail:GetOperationsForResource',
 GetRegions = 'lightsail:GetRegions',
 GetRelationalDatabase = 'lightsail:GetRelationalDatabase',
 GetRelationalDatabaseBlueprints = 'lightsail:GetRelationalDatabaseBlueprints',
 GetRelationalDatabaseBundles = 'lightsail:GetRelationalDatabaseBundles',
 GetRelationalDatabaseEvents = 'lightsail:GetRelationalDatabaseEvents',
 GetRelationalDatabaseLogEvents = 'lightsail:GetRelationalDatabaseLogEvents',
 GetRelationalDatabaseLogStreams = 'lightsail:GetRelationalDatabaseLogStreams',
 GetRelationalDatabaseMasterUserPassword = 'lightsail:GetRelationalDatabaseMasterUserPassword',
 GetRelationalDatabaseMetricData = 'lightsail:GetRelationalDatabaseMetricData',
 GetRelationalDatabaseParameters = 'lightsail:GetRelationalDatabaseParameters',
 GetRelationalDatabaseSnapshot = 'lightsail:GetRelationalDatabaseSnapshot',
 GetRelationalDatabaseSnapshots = 'lightsail:GetRelationalDatabaseSnapshots',
 GetRelationalDatabases = 'lightsail:GetRelationalDatabases',
 GetStaticIp = 'lightsail:GetStaticIp',
 GetStaticIps = 'lightsail:GetStaticIps',
 ImportKeyPair = 'lightsail:ImportKeyPair',
 IsVpcPeered = 'lightsail:IsVpcPeered',
 OpenInstancePublicPorts = 'lightsail:OpenInstancePublicPorts',
 PeerVpc = 'lightsail:PeerVpc',
 PutInstancePublicPorts = 'lightsail:PutInstancePublicPorts',
 RebootInstance = 'lightsail:RebootInstance',
 RebootRelationalDatabase = 'lightsail:RebootRelationalDatabase',
 ReleaseStaticIp = 'lightsail:ReleaseStaticIp',
 StartInstance = 'lightsail:StartInstance',
 StartRelationalDatabase = 'lightsail:StartRelationalDatabase',
 StopInstance = 'lightsail:StopInstance',
 StopRelationalDatabase = 'lightsail:StopRelationalDatabase',
 TagResource = 'lightsail:TagResource',
 UnpeerVpc = 'lightsail:UnpeerVpc',
 UntagResource = 'lightsail:UntagResource',
 UpdateDomainEntry = 'lightsail:UpdateDomainEntry',
 UpdateLoadBalancerAttribute = 'lightsail:UpdateLoadBalancerAttribute',
 UpdateRelationalDatabase = 'lightsail:UpdateRelationalDatabase',
 UpdateRelationalDatabaseParameters = 'lightsail:UpdateRelationalDatabaseParameters',

}