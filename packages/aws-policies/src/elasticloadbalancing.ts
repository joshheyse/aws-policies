
export enum elasticloadbalancing {
 AddListenerCertificates = 'elasticloadbalancing:AddListenerCertificates',
 AddTags = 'elasticloadbalancing:AddTags',
 CreateListener = 'elasticloadbalancing:CreateListener',
 CreateLoadBalancer = 'elasticloadbalancing:CreateLoadBalancer',
 CreateRule = 'elasticloadbalancing:CreateRule',
 CreateTargetGroup = 'elasticloadbalancing:CreateTargetGroup',
 DeleteListener = 'elasticloadbalancing:DeleteListener',
 DeleteLoadBalancer = 'elasticloadbalancing:DeleteLoadBalancer',
 DeleteRule = 'elasticloadbalancing:DeleteRule',
 DeleteTargetGroup = 'elasticloadbalancing:DeleteTargetGroup',
 DeregisterTargets = 'elasticloadbalancing:DeregisterTargets',
 DescribeAccountLimits = 'elasticloadbalancing:DescribeAccountLimits',
 DescribeListenerCertificates = 'elasticloadbalancing:DescribeListenerCertificates',
 DescribeListeners = 'elasticloadbalancing:DescribeListeners',
 DescribeLoadBalancerAttributes = 'elasticloadbalancing:DescribeLoadBalancerAttributes',
 DescribeLoadBalancers = 'elasticloadbalancing:DescribeLoadBalancers',
 DescribeRules = 'elasticloadbalancing:DescribeRules',
 DescribeSSLPolicies = 'elasticloadbalancing:DescribeSSLPolicies',
 DescribeTags = 'elasticloadbalancing:DescribeTags',
 DescribeTargetGroupAttributes = 'elasticloadbalancing:DescribeTargetGroupAttributes',
 DescribeTargetGroups = 'elasticloadbalancing:DescribeTargetGroups',
 DescribeTargetHealth = 'elasticloadbalancing:DescribeTargetHealth',
 ModifyListener = 'elasticloadbalancing:ModifyListener',
 ModifyLoadBalancerAttributes = 'elasticloadbalancing:ModifyLoadBalancerAttributes',
 ModifyRule = 'elasticloadbalancing:ModifyRule',
 ModifyTargetGroup = 'elasticloadbalancing:ModifyTargetGroup',
 ModifyTargetGroupAttributes = 'elasticloadbalancing:ModifyTargetGroupAttributes',
 RegisterTargets = 'elasticloadbalancing:RegisterTargets',
 RemoveListenerCertificates = 'elasticloadbalancing:RemoveListenerCertificates',
 RemoveTags = 'elasticloadbalancing:RemoveTags',
 SetIpAddressType = 'elasticloadbalancing:SetIpAddressType',
 SetRulePriorities = 'elasticloadbalancing:SetRulePriorities',
 SetSecurityGroups = 'elasticloadbalancing:SetSecurityGroups',
 SetSubnets = 'elasticloadbalancing:SetSubnets',
 SetWebAcl = 'elasticloadbalancing:SetWebAcl',
 ApplySecurityGroupsToLoadBalancer = 'elasticloadbalancing:ApplySecurityGroupsToLoadBalancer',
 AttachLoadBalancerToSubnets = 'elasticloadbalancing:AttachLoadBalancerToSubnets',
 ConfigureHealthCheck = 'elasticloadbalancing:ConfigureHealthCheck',
 CreateAppCookieStickinessPolicy = 'elasticloadbalancing:CreateAppCookieStickinessPolicy',
 CreateLBCookieStickinessPolicy = 'elasticloadbalancing:CreateLBCookieStickinessPolicy',
 CreateLoadBalancerListeners = 'elasticloadbalancing:CreateLoadBalancerListeners',
 CreateLoadBalancerPolicy = 'elasticloadbalancing:CreateLoadBalancerPolicy',
 DeleteLoadBalancerListeners = 'elasticloadbalancing:DeleteLoadBalancerListeners',
 DeleteLoadBalancerPolicy = 'elasticloadbalancing:DeleteLoadBalancerPolicy',
 DeregisterInstancesFromLoadBalancer = 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer',
 DescribeInstanceHealth = 'elasticloadbalancing:DescribeInstanceHealth',
 DescribeLoadBalancerPolicies = 'elasticloadbalancing:DescribeLoadBalancerPolicies',
 DescribeLoadBalancerPolicyTypes = 'elasticloadbalancing:DescribeLoadBalancerPolicyTypes',
 DetachLoadBalancerFromSubnets = 'elasticloadbalancing:DetachLoadBalancerFromSubnets',
 DisableAvailabilityZonesForLoadBalancer = 'elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer',
 EnableAvailabilityZonesForLoadBalancer = 'elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer',
 RegisterInstancesWithLoadBalancer = 'elasticloadbalancing:RegisterInstancesWithLoadBalancer',
 SetLoadBalancerListenerSSLCertificate = 'elasticloadbalancing:SetLoadBalancerListenerSSLCertificate',
 SetLoadBalancerPoliciesForBackendServer = 'elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer',
 SetLoadBalancerPoliciesOfListener = 'elasticloadbalancing:SetLoadBalancerPoliciesOfListener',

}